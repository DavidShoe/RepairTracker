@model RepairTracker.DBModels.RepairPart
@{
    int index = ViewData["Index"] as int? ?? 0;
    bool isReview = ViewData["IsReview"] as bool? ?? false;
}

@if (Model is not null)
{
    <tr data-repairpartid = "@Model.RepairPartId">
        @if (!isReview)
        {
            @Html.Hidden($"Repair.RepairParts[{index}].RepairPartId", Model.RepairPartId)
            @Html.Hidden($"Repair.RepairParts[{index}].RepairId", Model.RepairId)
            @Html.Hidden($"Repair.RepairParts[{index}].PartId", Model.PartId)
            @Html.Hidden($"Repair.RepairParts[{index}].Cost", Model.Cost)
            @Html.Hidden($"Repair.RepairParts[{index}].LineTotal", Model.LineTotal)
        }

        @if(!isReview)
        {
            <td class="cell" style="padding-top: 2px;">
                <input type="button" value="X" class="btn btn-danger scaleDown" onclick="deletePartLineItem(this, @Model.RepairPartId);" />
            </td>
        }

        <td>
            @Model.Part.PartName
        </td>

        <td>
            @if (isReview)
            {
                @Model.Sale
            }
            else
            {
                <input type="number" asp-for="@Model.Part.Sale" class="form-control right-aligned-text sale " id="sale_@index" name="Repair.RepairParts[@index].Sale" />
                <span asp-validation-for="@Model.Sale" class="text-danger"></span>
            }

        </td>

        <td>
            @if (isReview)
            {
                @Model.Quantity
            }
            else
            {
                <input type="number" asp-for="@Model.Quantity" class="form-control no-spinners qty" id="qty_@index" name="Repair.RepairParts[@index].Quantity" value="@Model.Quantity" />
                <span asp-validation-for="@Model.Quantity" class="text-danger"></span>
            }
        </td>

        <td id="lineTotal_@index" name="Repair.RepairParts[@index].Name">
            @Model.LineTotal
        </td>
    </tr>
}
